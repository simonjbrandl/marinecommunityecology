{
  "articles": [
    {
      "path": "0-overview.html",
      "title": "Session 0: Overview",
      "description": "This session provides a quick overview over the course and a short primer to installing and organizing your R environment. \n",
      "author": [
        {
          "name": "Simon J. Brandl, PhD",
          "url": "https://www.fishandfunctions.com/"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\nStructure of coding lessons\na. 0: Demo\nb. 0: Slides\nc.¬†0: Exercises\nd.¬†0: Solutions\n\nStructure of coding lessons\nAll of the sessions are structured in the same way, presenting the following materials:\na. A narrated slideshow that demos the content we‚Äôre working on\nb. The slideshow itself, which allows you to click links, copy code, etc.\nc.¬†A set of training exercises, marked as either ‚ÄòHomework‚Äô or ‚ÄòClasswork‚Äô\nd.¬†Solutions to the training exercises, which will come online after class\n\n‚Äî\n\n\n\na. 0: Demo\n\n\n\n\n\n\n\n\nb. 0: Slides\nYou can access the full slideshow used in the 0-Overview narration here.\n\nc.¬†0: Exercises\nNormally, this section would have exercises to be done as either homework or classwork. However, since it‚Äôs still early in the semester, I‚Äôll let you get away without homework on this one! üòâ\n\nd.¬†0: Solutions\nThis section will provide the solutions for homework and classwork exercises. But since there are no exercises, we also don‚Äôt have any solutions üòî\n\n\n\n",
      "last_modified": "2025-01-12T15:04:44-06:00"
    },
    {
      "path": "1-introduction.html",
      "title": "Session 1: Introduction to R",
      "description": "This session provides an introduction to the most basic operations and functions in R. \n",
      "author": [
        {
          "name": "Simon J. Brandl, PhD",
          "url": "https://www.fishandfunctions.com/"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\na. 1: Demo\nb. 1: Slides\nc.¬†1: Exercises\nHomework\nBonus homework ü§©\n\nClasswork\n\nd.¬†1: Solutions\nHomework:\na)\nb)\nc)\nBonus work\n\nClasswork\na)\nb)\nc)\nd)\n\n\n\na. 1: Demo\n\n\n\n\n\n\n\n\nb. 1: Slides\nYou can access the full slideshow used in the 1-Introduction narration here.\nThe dataset called ‚Äòcoralreefherbivores.csv‚Äô can be downloaded here.\n\nc.¬†1: Exercises\nHomework\nPlease complete the following exercises at home after going through the demo above. We will go through the solutions to these exercises in class on Monday Jan 29th\ncreate the following vectors:\n4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6\na sequence from 2 to 36, repeated three times\nthe words ‚Äúbluefish‚Äù ‚Äúredfish‚Äù and ‚Äúwhitefish‚Äù in this sequence, six times\ncombine the last two vectors into a new vector\n\ncreate a vector using  rpois(100, 10) \ndetermine the frequency of the number 8 in your vector\ndetermine how many numbers in your vector are greater than 10\ndetermine how many numbers in your vector are smaller than 10 but greater than 5\n\nbuild a matrix that looks like this:\n\n[,1]\n[,2]\n[,3]\n[,4]\n[,5]\n[1,]\n1\n2\n3\n4\n[2,]\n5\n6\n7\n8\n[3,]\n9\n10\n11\n12\n[4,]\n13\n14\n15\n16\n[5,]\n17\n18\n19\n20\nBonus homework ü§©\nPerform these exercises if you want to treat yourself to some extra work. Note that this is not a required part of the homework assignment\ncreate a sequence of multiples of nines between 0 and 100, repeated ten times\ncreate a vector with random values using  rnorm(1000, 0) , with an explanation of what  rnorm()  does\ncreate a second vector using rnorm, but this time with 10,000 elements, a mean of 50, and a standard deviation of 10\ntell me what the following functions tell you about your vectors:  length(), str(), summary(), head(), tail() \nretain only the elements from your previous vector that are greater than the mean but smaller than the 3rd Quantile\nClasswork\nWe will do these exercises in class on Monday, January 29th\ncreate a vector using  rpois(500, 10) \ndetermine the proportional frequency of numbers that are >15\nsort the vector in descending order\ntake the log of the vector and then determine the mean value\nreplace every 10th value in the vector with 0, take the log, and calculate the mean. Exclude values that cause the mean to be -Inf\n\nbuild a matrix that looks like this:\n\n[]\nredfish\nbluefish\nwhitefish\nyellowfish\nS1\n0\n3\n6\n9\nS2\n12\n15\n18\n21\nS3\n24\n27\n30\n33\nS4\n24\n22\n20\n18\nS5\n16\n14\n12\n10\nS6\n8\n6\n4\n2\nturn your matrix into a data.frame and add a column entitled ‚ÄúLocation‚Äù that contains the following sequence: Texas, Belize, Texas, Belize, Texas\ndetermine the mean number of fish at site S3\ndetermine the difference in the mean number of bluefish and yellowfish across all sites\nbuild the following matrix:\n100 rows, 20 columns, filled column-wise with randomly-drawn, normally distributed values with a mean of 100 and a standard deviation of 10\ndetermine the value of the second-to-last row in column 5\ndetermine which column has the largest value in the matrix and which column has the greatest deviation from the mean (100)\n\nload in the ‚Äòcoralreefherbivores.csv‚Äô dataset and\nturn it into a tibble\ndetermine the data classes of each column\ncompare the snoutlength of the species Chlorurus microrhinos and Zebrasoma velifer\n\n\nd.¬†1: Solutions\nHomework:\na)\n\n\na1<-rep(seq(from=4,to=6,by=1),times=6) %>%\n  print()\n\n [1] 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6\n\na2 <- rep(seq(from = 2, to = 36, by = 1), times = 3)\na2\n\n  [1]  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22\n [22] 23 24 25 26 27 28 29 30 31 32 33 34 35 36  2  3  4  5  6  7  8\n [43]  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29\n [64] 30 31 32 33 34 35 36  2  3  4  5  6  7  8  9 10 11 12 13 14 15\n [85] 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36\n\na3 <- rep(c(\"bluefish\", \"redfish\", \"whitefish\"), times = 6)\na3\n\n [1] \"bluefish\"  \"redfish\"   \"whitefish\" \"bluefish\"  \"redfish\"  \n [6] \"whitefish\" \"bluefish\"  \"redfish\"   \"whitefish\" \"bluefish\" \n[11] \"redfish\"   \"whitefish\" \"bluefish\"  \"redfish\"   \"whitefish\"\n[16] \"bluefish\"  \"redfish\"   \"whitefish\"\n\na4 <- paste(a2, a3)\na4\n\n  [1] \"2 bluefish\"   \"3 redfish\"    \"4 whitefish\"  \"5 bluefish\"  \n  [5] \"6 redfish\"    \"7 whitefish\"  \"8 bluefish\"   \"9 redfish\"   \n  [9] \"10 whitefish\" \"11 bluefish\"  \"12 redfish\"   \"13 whitefish\"\n [13] \"14 bluefish\"  \"15 redfish\"   \"16 whitefish\" \"17 bluefish\" \n [17] \"18 redfish\"   \"19 whitefish\" \"20 bluefish\"  \"21 redfish\"  \n [21] \"22 whitefish\" \"23 bluefish\"  \"24 redfish\"   \"25 whitefish\"\n [25] \"26 bluefish\"  \"27 redfish\"   \"28 whitefish\" \"29 bluefish\" \n [29] \"30 redfish\"   \"31 whitefish\" \"32 bluefish\"  \"33 redfish\"  \n [33] \"34 whitefish\" \"35 bluefish\"  \"36 redfish\"   \"2 whitefish\" \n [37] \"3 bluefish\"   \"4 redfish\"    \"5 whitefish\"  \"6 bluefish\"  \n [41] \"7 redfish\"    \"8 whitefish\"  \"9 bluefish\"   \"10 redfish\"  \n [45] \"11 whitefish\" \"12 bluefish\"  \"13 redfish\"   \"14 whitefish\"\n [49] \"15 bluefish\"  \"16 redfish\"   \"17 whitefish\" \"18 bluefish\" \n [53] \"19 redfish\"   \"20 whitefish\" \"21 bluefish\"  \"22 redfish\"  \n [57] \"23 whitefish\" \"24 bluefish\"  \"25 redfish\"   \"26 whitefish\"\n [61] \"27 bluefish\"  \"28 redfish\"   \"29 whitefish\" \"30 bluefish\" \n [65] \"31 redfish\"   \"32 whitefish\" \"33 bluefish\"  \"34 redfish\"  \n [69] \"35 whitefish\" \"36 bluefish\"  \"2 redfish\"    \"3 whitefish\" \n [73] \"4 bluefish\"   \"5 redfish\"    \"6 whitefish\"  \"7 bluefish\"  \n [77] \"8 redfish\"    \"9 whitefish\"  \"10 bluefish\"  \"11 redfish\"  \n [81] \"12 whitefish\" \"13 bluefish\"  \"14 redfish\"   \"15 whitefish\"\n [85] \"16 bluefish\"  \"17 redfish\"   \"18 whitefish\" \"19 bluefish\" \n [89] \"20 redfish\"   \"21 whitefish\" \"22 bluefish\"  \"23 redfish\"  \n [93] \"24 whitefish\" \"25 bluefish\"  \"26 redfish\"   \"27 whitefish\"\n [97] \"28 bluefish\"  \"29 redfish\"   \"30 whitefish\" \"31 bluefish\" \n[101] \"32 redfish\"   \"33 whitefish\" \"34 bluefish\"  \"35 redfish\"  \n[105] \"36 whitefish\"\n\nb)\n\n\nb1 <- rpois(100,10)\nb1\n\n  [1]  9 17 11  5 11 10 12 11 16 12 13  5  6 14 11 11 10  7 10 12  8\n [22] 17 11 11  9 11 17 14 10  5  6 12  3  6  9 13  8  8 14 10 12 13\n [43]  6 10 11  9  5 13 11  9 14 12  7 10 15  9 10 16  7  3 13  9 12\n [64]  7 11  6 12 15 15 12  7  6  7 10  9  7 10  9  8  4  9 12  5 13\n [85] 15  9 13 11  8  6  5  5 10  9 11  9  8 12  8 11\n\nb2 <- b1[b1 == 8]\ntable(b2)\n\nb2\n8 \n7 \n\nlength(b2)\n\n[1] 7\n\nb3 <- b1[b1 >10]\nb3\n\n [1] 17 11 11 12 11 16 12 13 14 11 11 12 17 11 11 11 17 14 12 13 14 12\n[23] 13 11 13 11 14 12 15 16 13 12 11 12 15 15 12 12 13 15 13 11 11 12\n[45] 11\n\nb4 <- b1[b1 <10 & b1 >5]\nb4\n\n [1] 9 6 7 8 9 6 6 9 8 8 6 9 9 7 9 7 9 7 6 7 6 7 9 7 9 8 9 9 8 6 9 9 8\n[34] 8\n\nc)\n\n\nc1 <- matrix(1:20, nrow = 5, byrow = TRUE)\nc1\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    2    3    4\n[2,]    5    6    7    8\n[3,]    9   10   11   12\n[4,]   13   14   15   16\n[5,]   17   18   19   20\n\nBonus work\nTBA\nClasswork\na)\n\n\na1 <- rpois(500, 10)\nhead(a1)\n\n[1]  5 15  9  8  7 11\n\na2 <- a1[a1 > 15]\nlength(a2)/length(a1)\n\n[1] 0.036\n\na3 <- rev(sort(a1))\nhead(a3)\n\n[1] 21 20 18 18 18 17\n\na4 <- log(a1)\nhead(a4)\n\n[1] 1.609438 2.708050 2.197225 2.079442 1.945910 2.397895\n\n#a5\na1[seq(from=0,to=500,by=10)]<-0\n#or\nreplace(a1, (seq(from=0, to=500, by=10)), 0)\n\n  [1]  5 15  9  8  7 11 15 15 14  0 10  9  5 10  8 14  8 11  9  0  7\n [22] 11  9  8 10  8  5  7 11  0 11 11 11  9 11 10 11  8  9  0  9 12\n [43]  6  5 10 16 12 18 11  0  9 10  9 12 12  8  6  5 10  0 10  8  8\n [64] 15 10 11 14  6 11  0 16 16 11 11  9  9 13  8  8  0 11  7  8  9\n [85] 14 11 10 12 12  0  6 14 10  8 16 12 14  9 13  0  5 12  6 12 10\n[106] 10  5  6 10  0 11  5  9 15 15 10 13  6  7  0 12 10  8 10 11 12\n[127]  7  7 12  0 11  6 12 10  6 10 13  5 10  0  5  9 12 14 10 13 12\n[148]  6  7  0 16  7  8 10  7  7 16  9 10  0 10  9 11  5 14  8 12 13\n[169] 17  0 10 13 11 13  8 16 14  7  8  0 14  8 13 10  8  8 11 10 10\n[190]  0 10 13  7 11 10  6 10  8  6  0  5  7  6  6  7  9  9  9  6  0\n[211] 11 12 13 15  5 10  5 13  7  0  5 13  8 12  5  7  3 10 13  0 12\n[232] 13  8 10  8  8 14 10 15  0 12 11  8  8 12  9  5  9 12  0  9 11\n[253]  9 11 10  5 13 10  3  0  7 12 12 12  8  5  9 11  7  0 15  6  9\n[274] 11  7 10 15 14 21  0 11  5 10 10  7  5  7 10 11  0  6 12  8 13\n[295]  9 13 17 10 10  0 14 13  8 10  8 13  6 13 10  0  3 10  9 13 13\n[316]  9  5  9 14  0 14  8 10 14 10 11 10  6  6  0  8  7 13 12  4  2\n[337]  5  8  9  0  7  7  5 10  6  8 11  6  9  0 11 13 13 10 10 10 11\n[358]  9 11  0 15 18 14  6  8  9  8  6  9  0  8  5  9  8 10  8 11 13\n[379]  9  0 13 16 12 13  9 10  8  9 12  0 10 10  8 12  9 12 16 10 10\n[400]  0 11 16  9 11  7 10 15  7  9  0 13  9 12  9  7  8 11 10 10  0\n[421] 11  7 10  5 10 15 15  7 10  0 10 14 10  9  7 10  8  9 12  0 15\n[442] 11 10 11 13  7  9 15 12  0 12  8  8 13 11  8  8  7  8  0  8 10\n[463] 10 11  9 11 10  8  9  0 11 12  5  5 10 10 13 10 15  0 18 13  8\n[484] 15 14 11  7  8 10  0  7  7  6 11  7 15 10  3  8  0\n\na5logmean <- mean(log(a1[seq(from=0,to=500,by=10)]<-0)) # doesn't work because of -Inf values, so let's go step-by-step\n\na5step1 <- replace(a1, (seq(from=0, to=500, by=10)), 0) # replace with 0s\na5step2 <- a5step1[a5step1 > 0] # remove the 0s\na5step3 <- mean(log(a5step2)) # take the log of the mean\n\n\nb)\n\n\nb1 <- matrix(c(seq(from = 0, to = 33, by = 3), seq(from = 24, to = 2, by = -2)), ncol = 4, byrow = TRUE)\nrownames(b1) <- c(\"S1\", \"S2\", \"S3\", \"S4\", \"S5\", \"S6\")\ncolnames(b1) <- c(\"redfish\", \"bluefish\", \"whitefish\", \"yellowfish\")\n\nb2 <- as.data.frame(b1) # turn into data frame\nb2$Location <- c(rep(c(\"Texas\", \"Belize\"), times = 3)) # add new column\n\nb3 <- as.matrix(b2[3,c(1:4)]) # turn row 3 and columns 1:4 back into a matrix\nmean(b3) # take the mean of the matrix \n\n[1] 28.5\n\nprint(b4blue <- mean(b2$bluefish)) # mean of bluefish\n\n[1] 14.5\n\nprint(b4yellow <- mean(b2$yellowfish)) # mean of yellowfish\n\n[1] 15.5\n\nprint(b4difference <- b4blue - b4yellow) # difference\n\n[1] -1\n\nc)\n\n\nc1 <- matrix(rnorm(2000, 100, 10), ncol = 20, byrow = F)\nhead(c1)\n\n          [,1]      [,2]      [,3]      [,4]      [,5]     [,6]\n[1,]  98.81246 106.59778  84.86458  92.20387  99.82820 85.74064\n[2,] 120.97675 106.33653  95.71220  88.20657 100.10533 86.78992\n[3,]  87.03539  98.02214 108.35438  99.58188 107.81606 89.68034\n[4,]  79.45154 107.27750  89.04439  89.30756  81.81249 89.28947\n[5,]  94.35169  86.57349  99.79111 104.60130  94.06397 90.21570\n[6,] 101.65442  98.36661 120.12767 104.76612 112.01547 86.60392\n          [,7]      [,8]      [,9]     [,10]     [,11]     [,12]\n[1,]  83.87669  84.96724 106.67780 100.95814 100.29466 108.82096\n[2,]  86.51624  81.40281  96.85529  91.93172  98.59530 108.09312\n[3,]  90.65950 107.74076  64.34809  93.11353 102.91061 100.36700\n[4,] 109.89907  90.64260 101.43235 110.63815  93.64987 108.33910\n[5,] 108.02179 101.35426 112.61211 102.30456  78.21477  81.76335\n[6,]  78.33054 117.28343 105.00991  94.50092  85.07549 100.94100\n         [,13]     [,14]     [,15]     [,16]     [,17]     [,18]\n[1,] 106.85640 100.24861 107.45762  98.88889 112.23043 119.40499\n[2,] 119.58700 103.38782 107.09410  97.82962  88.39468  92.21266\n[3,]  96.34849  94.17355 101.18781 100.43232  76.15241 113.94254\n[4,]  96.04065 108.45132  91.55806 108.60001 120.71480  97.90057\n[5,] 100.72617  95.62181  87.36161 117.55011  88.53095  94.00936\n[6,] 129.28544 102.87900 107.58275  73.88195  85.17821 111.47141\n         [,19]     [,20]\n[1,] 100.46661  97.52624\n[2,] 103.57645  89.83869\n[3,]  91.85102 102.12050\n[4,]  95.74432 104.41559\n[5,]  97.44510  90.94305\n[6,] 114.37317  93.37774\n\nc2 <- c1[98, 5] # look for value in row 98 column 5\nc2\n\n[1] 101.4546\n\nsummary(c1) # look for maximum value and largest deviation from the specified mean (100)\n\n       V1               V2               V3               V4        \n Min.   : 78.31   Min.   : 76.57   Min.   : 77.90   Min.   : 75.32  \n 1st Qu.: 93.36   1st Qu.: 94.59   1st Qu.: 93.34   1st Qu.: 94.11  \n Median :100.58   Median : 98.79   Median :100.08   Median : 99.69  \n Mean   :100.94   Mean   : 99.31   Mean   :100.60   Mean   : 99.92  \n 3rd Qu.:108.27   3rd Qu.:105.12   3rd Qu.:107.27   3rd Qu.:105.14  \n Max.   :126.54   Max.   :123.91   Max.   :129.74   Max.   :124.53  \n       V5               V6               V7               V8        \n Min.   : 72.31   Min.   : 73.02   Min.   : 74.61   Min.   : 75.87  \n 1st Qu.: 93.85   1st Qu.: 91.46   1st Qu.: 91.91   1st Qu.: 90.68  \n Median :100.57   Median : 98.31   Median :100.24   Median : 98.54  \n Mean   :100.19   Mean   : 99.59   Mean   : 99.12   Mean   : 99.06  \n 3rd Qu.:106.52   3rd Qu.:107.61   3rd Qu.:106.49   3rd Qu.:107.26  \n Max.   :122.88   Max.   :121.29   Max.   :124.85   Max.   :126.95  \n       V9              V10              V11              V12        \n Min.   : 64.35   Min.   : 74.97   Min.   : 69.89   Min.   : 75.67  \n 1st Qu.: 92.95   1st Qu.: 94.20   1st Qu.: 91.90   1st Qu.: 93.52  \n Median :100.14   Median :101.10   Median : 98.67   Median :100.82  \n Mean   : 99.47   Mean   :100.58   Mean   : 98.27   Mean   :101.46  \n 3rd Qu.:105.19   3rd Qu.:108.42   3rd Qu.:104.92   3rd Qu.:109.22  \n Max.   :129.20   Max.   :119.90   Max.   :127.58   Max.   :129.53  \n      V13              V14              V15              V16        \n Min.   : 68.80   Min.   : 77.46   Min.   : 78.79   Min.   : 73.88  \n 1st Qu.: 93.91   1st Qu.: 92.63   1st Qu.: 92.02   1st Qu.: 90.70  \n Median :100.30   Median : 99.91   Median : 99.55   Median :101.73  \n Mean   :101.15   Mean   : 99.27   Mean   :100.30   Mean   :100.28  \n 3rd Qu.:107.70   3rd Qu.:107.49   3rd Qu.:107.58   3rd Qu.:108.29  \n Max.   :129.29   Max.   :121.58   Max.   :121.44   Max.   :128.49  \n      V17              V18              V19              V20        \n Min.   : 76.15   Min.   : 74.93   Min.   : 78.09   Min.   : 78.36  \n 1st Qu.: 91.62   1st Qu.: 93.38   1st Qu.: 95.07   1st Qu.: 93.26  \n Median : 99.59   Median : 98.44   Median : 99.31   Median : 99.66  \n Mean   :100.06   Mean   :100.21   Mean   :100.74   Mean   : 99.51  \n 3rd Qu.:109.17   3rd Qu.:106.73   3rd Qu.:107.09   3rd Qu.:104.76  \n Max.   :124.51   Max.   :122.24   Max.   :126.43   Max.   :124.37  \n\nd)\n\n\nherbivores <- read.csv(file = \"data/coralreefherbivores.csv\")\nherbivore.tbl <- dplyr::as_tibble(herbivores) # turn into tibble - might need a new package here ;-)\nherbivore.tbl # tibbles tell you the data classes but str() would also work well\n\n# A tibble: 96 √ó 10\n   family       genus      species gen.spe    sl bodydepth snoutlength\n   <chr>        <chr>      <chr>   <chr>   <dbl>     <dbl>       <dbl>\n 1 Acanthuridae Acanthurus achill‚Ä¶ Acanth‚Ä¶ 164.      0.554       0.488\n 2 Acanthuridae Acanthurus albipe‚Ä¶ Acanth‚Ä¶ 213.      0.441       0.440\n 3 Acanthuridae Acanthurus aurant‚Ä¶ Acanth‚Ä¶ 216       0.473       0.539\n 4 Acanthuridae Acanthurus blochii Acanth‚Ä¶  82.9     0.559       0.478\n 5 Acanthuridae Acanthurus dussum‚Ä¶ Acanth‚Ä¶ 194.      0.546       0.566\n 6 Acanthuridae Acanthurus fowleri Acanth‚Ä¶ 266       0.467       0.595\n 7 Acanthuridae Acanthurus guttat‚Ä¶ Acanth‚Ä¶ 150       0.680       0.404\n 8 Acanthuridae Acanthurus leucoc‚Ä¶ Acanth‚Ä¶ 229.      0.491       0.563\n 9 Acanthuridae Acanthurus leucop‚Ä¶ Acanth‚Ä¶ 190.      0.578       0.490\n10 Acanthuridae Acanthurus lineat‚Ä¶ Acanth‚Ä¶ 133.      0.499       0.464\n# ‚Ñπ 86 more rows\n# ‚Ñπ 3 more variables: eyediameter <dbl>, size <chr>, schooling <chr>\n\nherbivore.tbl$gen.spe # the two species are rows 31 and 96\n\n [1] \"Acanthurus.achilles\"       \"Acanthurus.albipectoralis\"\n [3] \"Acanthurus.auranticavus\"   \"Acanthurus.blochii\"       \n [5] \"Acanthurus.dussumieri\"     \"Acanthurus.fowleri\"       \n [7] \"Acanthurus.guttatus\"       \"Acanthurus.leucocheilus\"  \n [9] \"Acanthurus.leucopareius\"   \"Acanthurus.lineatus\"      \n[11] \"Acanthurus.maculiceps\"     \"Acanthurus.mata\"          \n[13] \"Acanthurus.nigricans\"      \"Acanthurus.nigricauda\"    \n[15] \"Acanthurus.nigrofuscus\"    \"Acanthurus.nigroris\"      \n[17] \"Acanthurus.nubilus\"        \"Acanthurus.olivaceus\"     \n[19] \"Acanthurus.pyroferus\"      \"Acanthurus.thompsoni\"     \n[21] \"Acanthurus.triostegus\"     \"Acanthurus.xanthopterus\"  \n[23] \"Bolbometopon.muricatum\"    \"Calotomus.carolinus\"      \n[25] \"Calotomus.spinidens\"       \"Cetoscarus.ocellatus\"     \n[27] \"Chlorurus.bleekeri\"        \"Chlorurus.bowersi\"        \n[29] \"Chlorurus.frontalis\"       \"Chlorurus.japanensis\"     \n[31] \"Chlorurus.microrhinos\"     \"Ctenochaetus.binotatus\"   \n[33] \"Ctenochaetus.flavicauda\"   \"Ctenochaetus.hawaiiensis\" \n[35] \"Ctenochaetus.marginatus\"   \"Ctenochaetus.striatus\"    \n[37] \"Ctenochaetus.strigosus\"    \"Ctenochaetus.tominiensis\" \n[39] \"Hipposcarus.longiceps\"     \"Kyphosus.vaigiensis\"      \n[41] \"Leptoscarus.vaigiensis\"    \"Naso.annulatus\"           \n[43] \"Naso.brachycentron\"        \"Naso.brevirostris\"        \n[45] \"Naso.caesius\"              \"Naso.hexacanthus\"         \n[47] \"Naso.lituratus\"            \"Naso.lopezi\"              \n[49] \"Naso.thynnoides\"           \"Naso.tuberosus\"           \n[51] \"Naso.unicornis\"            \"Naso.vlamingii\"           \n[53] \"Paracanthurus.hepatus\"     \"Scarus.altipinnis\"        \n[55] \"Scarus.chameleon\"          \"Scarus.dimidiatus\"        \n[57] \"Scarus.festivus\"           \"Scarus.flavipectoralis\"   \n[59] \"Scarus.forsteni\"           \"Scarus.frenatus\"          \n[61] \"Scarus.ghobban\"            \"Scarus.globiceps\"         \n[63] \"Scarus.hypselopterus\"      \"Scarus.longipinnis\"       \n[65] \"Scarus.niger\"              \"Scarus.oviceps\"           \n[67] \"Scarus.prasiognathos\"      \"Scarus.psittacus\"         \n[69] \"Scarus.quoyi\"              \"Scarus.rivulatus\"         \n[71] \"Scarus.rubroviolaceus\"     \"Scarus.schlegeli\"         \n[73] \"Scarus.spinus\"             \"Scarus.tricolor\"          \n[75] \"Scarus.xanthopleura\"       \"Siganus.argenteus\"        \n[77] \"Siganus.canaliculatus\"     \"Siganus.corallinus\"       \n[79] \"Siganus.doliatus\"          \"Siganus.fuscescens\"       \n[81] \"Siganus.guttatus\"          \"Siganus.javus\"            \n[83] \"Siganus.lineatus\"          \"Siganus.niger\"            \n[85] \"Siganus.puellus\"           \"Siganus.punctatissimus\"   \n[87] \"Siganus.punctatus\"         \"Siganus.randalli\"         \n[89] \"Siganus.spinus\"            \"Siganus.stellatus\"        \n[91] \"Siganus.vermiculatus\"      \"Siganus.vulpinus\"         \n[93] \"Zebrasoma.flavescens\"      \"Zebrasoma.rostratum\"      \n[95] \"Zebrasoma.scopas\"          \"Zebrasoma.velifer\"        \n\nherbivore.tbl[c(31,96),] # check snoutlength\n\n# A tibble: 2 √ó 10\n  family genus species gen.spe    sl bodydepth snoutlength eyediameter\n  <chr>  <chr> <chr>   <chr>   <dbl>     <dbl>       <dbl>       <dbl>\n1 Labri‚Ä¶ Chlo‚Ä¶ micror‚Ä¶ Chloru‚Ä¶   417     0.402       0.359       0.149\n2 Acant‚Ä¶ Zebr‚Ä¶ velifer Zebras‚Ä¶   153     0.548       0.625       0.359\n# ‚Ñπ 2 more variables: size <chr>, schooling <chr>\n\n\n\n\n",
      "last_modified": "2025-01-12T15:04:46-06:00"
    },
    {
      "path": "1-primer.html",
      "title": "Week 1: A Primer to Community Ecology",
      "description": "This session provides basic information about the course as taught in Spring 2025, as well as a primer to the field of community ecology. \n",
      "author": [
        {
          "name": "Simon J. Brandl, PhD",
          "url": "https://www.fishandfunctions.com/"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\nLecture summary\n\nLecture summary\nThis lecture covers a basic overview of the course structure along with policies, assignments, and grading system. Furthermore, the lecture provides a short primer to community ecology. Specifically, we will explore why we care about ecological communities, what they are, and why they can be a complex subject to study.\nNote: If you are working through this course independently or are re-using its materials for your own class, feel free to ignore pages 1-52.\n\n## Lecture slides\nThe PDF containing the slides for today‚Äôs lecture can be downloaded here.\n\n## Lecture recording\n\n\n\n\n\n\n\n\n\n\n\n",
      "last_modified": "2025-01-12T15:04:46-06:00"
    },
    {
      "path": "2-tidyverse.html",
      "title": "Session 2: Entering the tidyverse",
      "description": "This session introduces the basic functions in dplyr and other packages within the tidyverse. \n",
      "author": [
        {
          "name": "Simon J. Brandl, PhD",
          "url": "https://www.fishandfunctions.com/"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\na. 2: Demo\nb. 2: Slides\nc.¬†2: Exercises\nHomework\nBonus homework ü§©\n\nClasswork\n\nd.¬†2: Solutions\nHomework\na)\n\nClasswork\na)\nb)\nc)\n\n\n\n\n\n\na. 2: Demo\n\n\n\n\n\n\n\n\nb. 2: Slides\nYou can access the full slideshow used in the 2-Tidyverse narration here.\nThe dataset called ‚Äòfishtibble.csv‚Äô can be downloaded here.\nThe dataset called ‚Äòcoralreefherbivores.csv‚Äô can be downloaded here.\nThe dataset called ‚Äòfish_abundance.csv‚Äô can be downloaded here.\n\nc.¬†2: Exercises\nHomework\nPlease complete the following exercises at home after going through the demo above. We will go through the solutions to these exercises in class on Wednesday Jan 31st\nRead in the coralreefherbivores.csv dataset (if you haven‚Äôt already done so).\n\nThe ‚Äúcoralreefherbivores.csv‚Äù dataset contains trait information on 93 species of herbivorous coral reef fishes from the Great Barrier Reef, Australia. The first four columns provide taxonomic information (family, genus, species, and a combined genus + species column called ‚Äúgenspe‚Äù). The next column ‚Äúsl‚Äù indicates the standard length of the fish. Then, you have three columns with morphological measurements of body depth, snout length, and eye diameter. Finally, you have two columns that indicate maximum body size (categories from XS to XL) and their schooling behavior.\nUsing the herbivore dataset, perform the following actions:\nDetermine the mean standard length and standard deviation for the families Acanthuridae, Labridae, and Siganidae.\nCreate a variable that combines size and schooling into one column.\nExamine the mean eye diameter of the genera Zebrasoma and Scarus.\nCount the number of species in each size class.\nCalculate the ratio of snout length to standard length for each species, then determine which genus has the longest mean ratio of snout length to standard length.\n\nBonus homework ü§©\nPerform these exercises if you want to treat yourself to some extra work. Note that this is not a required part of the homework assignment\nlearn about and apply the following functions at your leisure:\n unite() \n separate() \n distinct() \n drop_na() \n\nClasswork\nWe will do these exercises in class on Wednesday, January 31st\n\nThe ‚Äúfish_abundance.csv‚Äù dataset contains reef fish abundance information, which was collected by the Reef Life Survey around Lizard Island, Australia. It includes information on the respective survey ID and its metadata (e.g.¬†site, latitude, longitude, date, and depth). It also includes a row for each observed species on a given visual survey, including taxonomic information (family, genus, species, and ‚Äúgenspe‚Äù), as well as the number of individuals observed on that survey (‚Äòtotal‚Äô).\nUsing the fish abundance dataset, perform the following actions:\nReveal how many distinct surveys were performed aruond Lizard Island.\nIn the family column, replace all occurrences of Scaridae with Labridae.\nFilter the dataset to only retain the families Acanthuridae, Siganidae, Kyphosidae and Labridae.\nExamine how many different species are in each genus.\nCalculate the mean abundance of each genus across different sites using group_by() and summarize(), while also retaining a variable that indicates the number of species per genus.\n\nUsing the herbivore trait dataset, perform the following actions:\nDetermine whether the median eye diameter differs between species in different social groups.\nRemove the standard length, size, and schooling categories dataset.\nCalculate the mean body depth, snout length, and eye diameter of each genus.\nTurn each trait into a separate column.\n\nCombine the two datasets:\nJoin the coralreefherbivores and fish_abundance datasets in their modified versions, retaining only genera that are present in the coralreefherbivores dataset and using ‚Äúgenus‚Äù as the joining variable.\nCreate a new variable that separates genera into high (>=2.0) and low (<2.0) abundance genera\nExamine whether high and low abundance genera differ in their mean morphological traits\n\nd.¬†2: Solutions\nHomework\na)\nUsing the herbivore dataset, perform the following actions:\nDetermine the mean standard length and standard deviation for the families Acanthuridae, Labridae, and Siganidae.\nCreate a variable that combines size and schooling into one column.\nExamine the mean eye diameter of the genera Zebrasoma and Scarus.\nCount the number of species in each size class.\nCalculate the ratio of snout length to standard length for each species, then determine which genus has the longest mean ratio of snout length to standard length.\n\n\n\nherbivores <- read.csv(file = \"data/coralreefherbivores.csv\")\nherbivores.filter <- herbivores %>% # mean sl and sd sl\n  filter(family == c(\"Acanthuridae\", \"Labridae\", \"Siganidae\")) %>%\n  group_by(family) %>%\n  summarize(mean.sl = mean(sl), sd.sl = sd(sl))\nhead(herbivores.filter)\n\n# A tibble: 3 √ó 3\n  family       mean.sl sd.sl\n  <chr>          <dbl> <dbl>\n1 Acanthuridae    186.  89.7\n2 Labridae        269.  73.5\n3 Siganidae       168.  54.7\n\nherbivores.size_schooling <- herbivores %>%\n  mutate(size_school = paste(size, schooling, sep = \".\"))\nhead(herbivores.size_schooling)\n\n        family      genus        species                   gen.spe\n1 Acanthuridae Acanthurus       achilles       Acanthurus.achilles\n2 Acanthuridae Acanthurus albipectoralis Acanthurus.albipectoralis\n3 Acanthuridae Acanthurus   auranticavus   Acanthurus.auranticavus\n4 Acanthuridae Acanthurus        blochii        Acanthurus.blochii\n5 Acanthuridae Acanthurus     dussumieri     Acanthurus.dussumieri\n6 Acanthuridae Acanthurus        fowleri        Acanthurus.fowleri\n        sl bodydepth snoutlength eyediameter size    schooling\n1 163.6667 0.5543625   0.4877797   0.3507191    S     Solitary\n2 212.7300 0.4405350   0.4402623   0.2560593    M  SmallGroups\n3 216.0000 0.4726556   0.5386490   0.2451253    M MediumGroups\n4  82.9000 0.5586486   0.4782217   0.3196155    M  SmallGroups\n5 193.7033 0.5457248   0.5661867   0.2807218    L     Solitary\n6 266.0000 0.4669521   0.5950563   0.2217376    M     Solitary\n     size_school\n1     S.Solitary\n2  M.SmallGroups\n3 M.MediumGroups\n4  M.SmallGroups\n5     L.Solitary\n6     M.Solitary\n\nherbivores.size_schooling2 <- unite(herbivores, col = \"size_and_schooling\", c(\"size\", \"schooling\"), sep = \".\") #alternative solution\n\n\nzebrasoma.scarus <- herbivores %>%\n  filter(genus == c(\"Zebrasoma\", \"Scarus\")) %>%\n  group_by(genus) %>%\n  summarize(mean.eye = mean(eyediameter))\nhead(herbivores.size_schooling2)\n\n        family      genus        species                   gen.spe\n1 Acanthuridae Acanthurus       achilles       Acanthurus.achilles\n2 Acanthuridae Acanthurus albipectoralis Acanthurus.albipectoralis\n3 Acanthuridae Acanthurus   auranticavus   Acanthurus.auranticavus\n4 Acanthuridae Acanthurus        blochii        Acanthurus.blochii\n5 Acanthuridae Acanthurus     dussumieri     Acanthurus.dussumieri\n6 Acanthuridae Acanthurus        fowleri        Acanthurus.fowleri\n        sl bodydepth snoutlength eyediameter size_and_schooling\n1 163.6667 0.5543625   0.4877797   0.3507191         S.Solitary\n2 212.7300 0.4405350   0.4402623   0.2560593      M.SmallGroups\n3 216.0000 0.4726556   0.5386490   0.2451253     M.MediumGroups\n4  82.9000 0.5586486   0.4782217   0.3196155      M.SmallGroups\n5 193.7033 0.5457248   0.5661867   0.2807218         L.Solitary\n6 266.0000 0.4669521   0.5950563   0.2217376         M.Solitary\n\nnumber.species <- herbivores %>% # solution 1\n  select(size) %>%\n  group_by(size) %>%\n  count(size)\nnumber.species\n\n# A tibble: 5 √ó 2\n# Groups:   size [5]\n  size      n\n  <chr> <int>\n1 L        18\n2 M        43\n3 S        28\n4 XL        5\n5 XS        2\n\ncrh.d <- herbivores %>% group_by(size) %>% summarize(n_species = n_distinct(gen.spe))\ncrh.d\n\n# A tibble: 5 √ó 2\n  size  n_species\n  <chr>     <int>\n1 L            18\n2 M            43\n3 S            28\n4 XL            5\n5 XS            2\n\nratio <- herbivores %>%\n  group_by(species) %>%\n  mutate(ratio.snout.sl = (snoutlength/sl)) %>%\n  arrange(desc(ratio.snout.sl))\nhead(ratio)\n\n# A tibble: 6 √ó 11\n# Groups:   species [6]\n  family genus species gen.spe    sl bodydepth snoutlength eyediameter\n  <chr>  <chr> <chr>   <chr>   <dbl>     <dbl>       <dbl>       <dbl>\n1 Acant‚Ä¶ Cten‚Ä¶ binota‚Ä¶ Ctenoc‚Ä¶  62.4     0.529       0.451       0.365\n2 Acant‚Ä¶ Zebr‚Ä¶ scopas  Zebras‚Ä¶  96.1     0.621       0.600       0.304\n3 Acant‚Ä¶ Cten‚Ä¶ tomini‚Ä¶ Ctenoc‚Ä¶  85       0.491       0.525       0.277\n4 Acant‚Ä¶ Acan‚Ä¶ nigrof‚Ä¶ Acanth‚Ä¶  66.2     0.497       0.397       0.353\n5 Acant‚Ä¶ Acan‚Ä¶ blochii Acanth‚Ä¶  82.9     0.559       0.478       0.320\n6 Acant‚Ä¶ Cten‚Ä¶ flavic‚Ä¶ Ctenoc‚Ä¶  92       0.565       0.485       0.346\n# ‚Ñπ 3 more variables: size <chr>, schooling <chr>,\n#   ratio.snout.sl <dbl>\n\nClasswork\na)\nUsing the fish abundance dataset, perform the following actions:\nReveal how many distinct surveys were performed around Lizard Island (SurveyID).\nIn the family column, replace all occurrences of Scaridae with Labridae.\nFilter the dataset to only retain the families Acanthuridae, Siganidae, Kyphosidae and Labridae.\nExamine how many different species are in each genus.\nCalculate the mean abundance of each genus using group_by() and summarize(), while also retaining a variable that indicates the number of species per genus.\n\n\n\nfish.abu <- read.csv(file = \"data/fish_abundance.csv\")\n\n# how many surveys\nsurveys <- fish.abu %>%\n  select(surveyid) %>% \n  distinct() # distinct gives yu the number of unique occurrences\nnrow(surveys)\n\n[1] 62\n\n# replace Scaridae with Labridae\nfish.abu.recode <- fish.abu %>%\n  mutate(family = recode(family, \"Scaridae\" = \"Labridae\")) # use recode within mutate to change the family\nhead(fish.abu.recode)\n\n  surveyid   country              site sitelat sitelong    surveydate\n1  4000720 Australia Watsons Bay north  -14.66   145.45 6/27/10 14:00\n2  4000720 Australia Watsons Bay north  -14.66   145.45 6/27/10 14:00\n3  4000720 Australia Watsons Bay north  -14.66   145.45 6/27/10 14:00\n4  4000720 Australia Watsons Bay north  -14.66   145.45 6/27/10 14:00\n5  4000720 Australia Watsons Bay north  -14.66   145.45 6/27/10 14:00\n6  4000720 Australia Watsons Bay north  -14.66   145.45 6/27/10 14:00\n  depth       family        genus      species block total\n1     3 Acanthuridae   Acanthurus grammoptilus     2     4\n2     3 Acanthuridae   Acanthurus   nigricauda     2     3\n3     3 Acanthuridae   Acanthurus    olivaceus     2     2\n4     3 Acanthuridae Ctenochaetus    binotatus     1    15\n5     3 Acanthuridae Ctenochaetus    binotatus     2    10\n6     3 Acanthuridae    Zebrasoma       scopas     1     2\n                   genspe\n1 Acanthurus.grammoptilus\n2   Acanthurus.nigricauda\n3    Acanthurus.olivaceus\n4  Ctenochaetus.binotatus\n5  Ctenochaetus.binotatus\n6        Zebrasoma.scopas\n\n# filter out families\nfish.abu.filtered <- fish.abu.recode %>%\n  filter(family %in% c(\"Acanthuridae\", \"Siganidae\", \"Labridae\", \"Kyphosidae\")) # use filter - also works as family == c(\"\")\nhead(fish.abu.filtered)\n\n  surveyid   country              site sitelat sitelong    surveydate\n1  4000720 Australia Watsons Bay north  -14.66   145.45 6/27/10 14:00\n2  4000720 Australia Watsons Bay north  -14.66   145.45 6/27/10 14:00\n3  4000720 Australia Watsons Bay north  -14.66   145.45 6/27/10 14:00\n4  4000720 Australia Watsons Bay north  -14.66   145.45 6/27/10 14:00\n5  4000720 Australia Watsons Bay north  -14.66   145.45 6/27/10 14:00\n6  4000720 Australia Watsons Bay north  -14.66   145.45 6/27/10 14:00\n  depth       family        genus      species block total\n1     3 Acanthuridae   Acanthurus grammoptilus     2     4\n2     3 Acanthuridae   Acanthurus   nigricauda     2     3\n3     3 Acanthuridae   Acanthurus    olivaceus     2     2\n4     3 Acanthuridae Ctenochaetus    binotatus     1    15\n5     3 Acanthuridae Ctenochaetus    binotatus     2    10\n6     3 Acanthuridae    Zebrasoma       scopas     1     2\n                   genspe\n1 Acanthurus.grammoptilus\n2   Acanthurus.nigricauda\n3    Acanthurus.olivaceus\n4  Ctenochaetus.binotatus\n5  Ctenochaetus.binotatus\n6        Zebrasoma.scopas\n\n# count species in each genus\nfish.species.counts <- fish.abu.filtered %>%\n  group_by(genus) %>% # group by genus\n  summarize(number.species = n_distinct(species)) # use n_distinct() to count the rows in each groups ;-) \nhead(fish.species.counts)\n\n# A tibble: 6 √ó 2\n  genus      number.species\n  <chr>               <int>\n1 Acanthurid              1\n2 Acanthurus              9\n3 Anampses                2\n4 Bodianus                3\n5 Calotomus               1\n6 Cetoscarus              1\n\n# mean abundances and number of species\nfish.genus.abundance <- fish.abu.filtered %>%\n  group_by(genus) %>% # group by family and genus - important because we'll want family in this dataset\n  summarize(mean.abu = mean(total), number.species = n_distinct(species)) # mean and n_distinct\nhead(fish.genus.abundance)\n\n# A tibble: 6 √ó 3\n  genus      mean.abu number.species\n  <chr>         <dbl>          <int>\n1 Acanthurid     1                 1\n2 Acanthurus     4.01              9\n3 Anampses       3.33              2\n4 Bodianus       1.32              3\n5 Calotomus      1                 1\n6 Cetoscarus     1                 1\n\nb)\nUsing the herbivore trait dataset, perform the following actions:\nDetermine whether the median eye diameter differs among different social groups.\nRemove the standard length, size, and schooling categories dataset.\nCalculate the mean body depth, snout length, and eye diameter of each genus.\nTurn each trait back into a separate column.\n\n\n\n# eye diameter\nherbivore.eyes <- herbivores %>%\n  group_by(schooling) %>% # group by scholing variable\n  summarize(mean.eye = mean(eyediameter)) #summarize()\nherbivore.eyes\n\n# A tibble: 5 √ó 2\n  schooling    mean.eye\n  <chr>           <dbl>\n1 LargeGroups     0.275\n2 MediumGroups    0.233\n3 Pairs           0.315\n4 SmallGroups     0.268\n5 Solitary        0.262\n\nherbivore.pruned <- herbivores %>%\n  select(-sl, -size, -schooling) # use select to remove columns\nhead(herbivore.pruned)\n\n        family      genus        species                   gen.spe\n1 Acanthuridae Acanthurus       achilles       Acanthurus.achilles\n2 Acanthuridae Acanthurus albipectoralis Acanthurus.albipectoralis\n3 Acanthuridae Acanthurus   auranticavus   Acanthurus.auranticavus\n4 Acanthuridae Acanthurus        blochii        Acanthurus.blochii\n5 Acanthuridae Acanthurus     dussumieri     Acanthurus.dussumieri\n6 Acanthuridae Acanthurus        fowleri        Acanthurus.fowleri\n  bodydepth snoutlength eyediameter\n1 0.5543625   0.4877797   0.3507191\n2 0.4405350   0.4402623   0.2560593\n3 0.4726556   0.5386490   0.2451253\n4 0.5586486   0.4782217   0.3196155\n5 0.5457248   0.5661867   0.2807218\n6 0.4669521   0.5950563   0.2217376\n\n# mean body depth, snout length, and eye diameter\nherbivore.means <- herbivore.pruned %>%\n  gather(5:7, key = \"metric\", value = \"value\") %>% # gather thre three morphometric columns into one\n  group_by(genus, metric) %>% # group by\n  summarize(mean.val = mean(value)) # get mean\nhead(herbivore.means)\n\n# A tibble: 6 √ó 3\n# Groups:   genus [2]\n  genus        metric      mean.val\n  <chr>        <chr>          <dbl>\n1 Acanthurus   bodydepth      0.508\n2 Acanthurus   eyediameter    0.298\n3 Acanthurus   snoutlength    0.498\n4 Bolbometopon bodydepth      0.437\n5 Bolbometopon eyediameter    0.233\n6 Bolbometopon snoutlength    0.312\n\n# turn traits back into separate columns\nherbivore.spread <- herbivore.means %>%\n  spread(key = \"metric\", value = \"mean.val\") # use spread function\nherbivore.spread\n\n# A tibble: 14 √ó 4\n# Groups:   genus [14]\n   genus         bodydepth eyediameter snoutlength\n   <chr>             <dbl>       <dbl>       <dbl>\n 1 Acanthurus        0.508       0.298       0.498\n 2 Bolbometopon      0.437       0.233       0.312\n 3 Calotomus         0.385       0.246       0.306\n 4 Cetoscarus        0.387       0.139       0.428\n 5 Chlorurus         0.400       0.187       0.366\n 6 Ctenochaetus      0.532       0.295       0.535\n 7 Hipposcarus       0.404       0.150       0.386\n 8 Kyphosus          0.479       0.181       0.164\n 9 Leptoscarus       0.334       0.209       0.297\n10 Naso              0.386       0.274       0.547\n11 Paracanthurus     0.490       0.295       0.533\n12 Scarus            0.391       0.195       0.341\n13 Siganus           0.443       0.329       0.352\n14 Zebrasoma         0.575       0.305       0.657\n\nc)\nCombine the two datasets:\nJoin the coralreefherbivores and fish_abundance datasets in their modified versions, retaining only genera that are present in the coralreefherbivores dataset and using ‚Äúgenus‚Äù as the joining variable.\nCreate a new variable that separates genera into high (>=2.0) and low (<2.0) abundance genera\nExamine whether high and low abundance genera differ in their mean morphological traits\n\n\n\nherbivores.joined <- herbivore.spread %>%\n  left_join(fish.genus.abundance, by = \"genus\") %>% # use left_join to retain the ones in the traits dataset\n  drop_na(mean.abu) # remove NA values \nherbivores.joined\n\n# A tibble: 11 √ó 6\n# Groups:   genus [11]\n   genus     bodydepth eyediameter snoutlength mean.abu number.species\n   <chr>         <dbl>       <dbl>       <dbl>    <dbl>          <int>\n 1 Acanthur‚Ä¶     0.508       0.298       0.498     4.01              9\n 2 Calotomus     0.385       0.246       0.306     1                 1\n 3 Cetoscar‚Ä¶     0.387       0.139       0.428     1                 1\n 4 Chlorurus     0.400       0.187       0.366     5.39              2\n 5 Ctenocha‚Ä¶     0.532       0.295       0.535     5.58              3\n 6 Kyphosus      0.479       0.181       0.164     1.5               1\n 7 Naso          0.386       0.274       0.547     1.54              6\n 8 Paracant‚Ä¶     0.490       0.295       0.533     2                 1\n 9 Scarus        0.391       0.195       0.341     3.42             15\n10 Siganus       0.443       0.329       0.352     2.21             11\n11 Zebrasoma     0.575       0.305       0.657     2.80              2\n\nherbivores.joined.2 <- herbivores.joined %>%\n  mutate(highvslow = case_when(mean.abu >=2 ~ \"high\", # use case_when function\n                               TRUE ~ \"low\"))\nherbivores.joined.2\n\n# A tibble: 11 √ó 7\n# Groups:   genus [11]\n   genus     bodydepth eyediameter snoutlength mean.abu number.species\n   <chr>         <dbl>       <dbl>       <dbl>    <dbl>          <int>\n 1 Acanthur‚Ä¶     0.508       0.298       0.498     4.01              9\n 2 Calotomus     0.385       0.246       0.306     1                 1\n 3 Cetoscar‚Ä¶     0.387       0.139       0.428     1                 1\n 4 Chlorurus     0.400       0.187       0.366     5.39              2\n 5 Ctenocha‚Ä¶     0.532       0.295       0.535     5.58              3\n 6 Kyphosus      0.479       0.181       0.164     1.5               1\n 7 Naso          0.386       0.274       0.547     1.54              6\n 8 Paracant‚Ä¶     0.490       0.295       0.533     2                 1\n 9 Scarus        0.391       0.195       0.341     3.42             15\n10 Siganus       0.443       0.329       0.352     2.21             11\n11 Zebrasoma     0.575       0.305       0.657     2.80              2\n# ‚Ñπ 1 more variable: highvslow <chr>\n\nherbivores.highlow <- herbivores.joined.2 %>%\n  gather(2:5, key = \"metric\", value = \"value\") %>% # gathering to make it more efficient\n  group_by(metric, highvslow) %>% # grouping\n  summarize(mean.val = mean(value), # summarizing for mean and sd\n            sd.val = sd(value))\nherbivores.highlow\n\n# A tibble: 8 √ó 4\n# Groups:   metric [4]\n  metric      highvslow mean.val sd.val\n  <chr>       <chr>        <dbl>  <dbl>\n1 bodydepth   high         0.477 0.0688\n2 bodydepth   low          0.409 0.0466\n3 eyediameter high         0.272 0.0567\n4 eyediameter low          0.210 0.0613\n5 mean.abu    high         3.63  1.44  \n6 mean.abu    low          1.26  0.299 \n7 snoutlength high         0.469 0.119 \n8 snoutlength low          0.361 0.164 \n\n\n\n\n",
      "last_modified": "2025-01-12T15:04:47-06:00"
    },
    {
      "path": "3-ggplot.html",
      "title": "Session 3: Data visualization in ggplot2",
      "description": "This session introduces the basic functionalities of the ggplot2 package, allowing you to create beautiful graphs using R. \n",
      "author": [
        {
          "name": "Simon J. Brandl, PhD",
          "url": "https://www.fishandfunctions.com/"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\na. 3: Demo\nb. 3: Slides\nc.¬†3: Exercises\nHomework\nPart I\nPart II\nPart III\nBonus work ü§©\n\nClasswork\nPart I\nPart II\nPart III\n\n\nd.¬†3: Solutions\nHomework solutions\nPart I\nPart II\nPart III\n\nBonuswork solutions\nClasswork solutions\nPart I\nPart II\nPart III\n\n\n\n\n\na. 3: Demo\n\n\n\n\n\n\n\n\nb. 3: Slides\nYou can access the full slideshow used in the 3-ggplot narration here.\nThe dataset called ‚Äòcoralreefherbivores.csv‚Äô can be downloaded here.\nThe dataset called ‚Äòreef_fishes.csv‚Äô can be downloaded here.\nThe dataset called ‚Äòfish_abundance.csv‚Äô can be downloaded here.\nThe dataset called ‚Äòsite_info.csv‚Äô can be downloaded here.\n\nc.¬†3: Exercises\nHomework\nPlease complete the following exercises at home after going through the demo above. We will go through the solutions to these exercises in class on Wednesday Feb 7th\nStart by loading in the two datasets below (which are available for download using the links above).\n\n\nfish.abundance <- read.csv(file = \"data/fish_abundance.csv\")\nsite.info <- read.csv(file = \"data/site_info.csv\")\n\n\nRe-familiarize with the ‚Äúfish_abundance.csv‚Äù dataset. The dataset includes many fish species, which were counted across different sites and depths. Fish diversity often decreases with depth on coral reefs, so let‚Äôs explore whether there is a relationship between depth and diversity.\nPart I\nSimplify the dataset to include species, site, depth.\nUse distinct() to make sure no species were recorded twice.\nCalculate species richness by site and depth.\nPart II\nPlot depth versus species richness.\nAdd site as a color variable.\nPart III\nProduce another plot, only including the families Serranidae, Acanthuridae, Pomacentridae, and Chaetodontidae.\nUse with facet_wrap() or facet_grid() to create separate facets for each family.\nBonus work ü§©\nExplore differences in the species richness of the four families (Serranidae, Acanthuridae, Pomacentridae, and Chaetodontidae) using violin or density plots\nColor the density plots based on family and include the raw data to create sina plots\nTry to sort the violin plot in descending order, starting with the highest species richness\nMake it pretty! üòä\nClasswork\nWe will do these exercises in class on Wednesday, February 7th\nIn the last plot from Exercise 1, it appears as though some sites have higher species richness than others. Let‚Äôs further examine why species richness across sites using ‚Äúsite_info.csv,‚Äù which includes metadata on the exposure of each site.\nPart I\nCreate a dataset that summarizes species richness by surveyid and site.\nJoin this species richness data with the site exposure metadata.\nPart II\nUse a violin plot to visualize the species richness of exposed vs.¬†lagoon sites.\nPart III\nCalculate the average abundance of each family in a given survey.\nPlot the average abundance using density curves.\nBonus: Transform the x-axis to make the plot more useful.\nd.¬†3: Solutions\nHomework solutions\nPart I\nSimplify the dataset to include species, site, depth.\nUse distinct() to make sure no species were recorded twice.\nCalculate species richness by site and depth.\n\n\nfish.abundance <- read.csv(file = \"data/fish_abundance.csv\") # load data\n\nfish.sprich <- fish.abundance %>%\n  select(site, depth, genspe) %>%\n  distinct() %>%\n  group_by(site, depth) %>%\n  summarize(sprich = n())\n\nhead(fish.sprich)\n\n# A tibble: 6 √ó 3\n# Groups:   site [2]\n  site        depth sprich\n  <chr>       <dbl>  <int>\n1 Bird Islets   2.5    107\n2 Bird Islets   3      117\n3 Bird Islets   3.1     64\n4 Bird Islets  10       40\n5 Blue Hole     2       68\n6 Blue Hole     3.5     71\n\nPart II\nPlot depth versus species richness.\nAdd site as a color variable.\n\n\nfish.sprich.plot <- ggplot(fish.sprich, aes(x = depth, y = sprich, color = site)) +\n  geom_point() +\n  scale_color_fish_d(option = \"Synchiropus_splendidus\") +\n  theme_bw()\n  \nfish.sprich.plot\n\n\n\nPart III\nProduce another plot, only including the families Serranidae, Acanthuridae, Pomacentridae, and Chaetodontidae.\nUse with facet_wrap() or facet_grid() to create separate facets for each family.\n\n\nfish.sprich.fam <- fish.abundance %>%\n  filter(family %in% c(\"Acanthuridae\", \"Chaetodontidae\", \"Serranidae\", \"Pomacentridae\")) %>%\n  select(site, depth, family, genspe) %>%\n  distinct() %>%\n  group_by(site, depth, family) %>%\n  summarize(sprich = n()) \nhead(fish.sprich.fam)\n\n# A tibble: 6 √ó 4\n# Groups:   site, depth [2]\n  site        depth family         sprich\n  <chr>       <dbl> <chr>           <int>\n1 Bird Islets   2.5 Acanthuridae        9\n2 Bird Islets   2.5 Chaetodontidae      6\n3 Bird Islets   2.5 Pomacentridae      29\n4 Bird Islets   2.5 Serranidae          2\n5 Bird Islets   3   Acanthuridae        5\n6 Bird Islets   3   Chaetodontidae      9\n\nfish.sprich.fam.plot <- ggplot(fish.sprich.fam, aes(x = depth, y = sprich, color = site)) +\n  geom_point() + \n  facet_wrap(.~family, scales = \"free\") +\n    scale_color_fish_d(option = \"Synchiropus_splendidus\") +\n  theme_bw()\nfish.sprich.fam.plot\n\n\n\nBonuswork solutions\nExplore differences in the species richness of the four families (Serranidae, Acanthuridae, Pomacentridae, and Chaetodontidae) using violin or density plots\nColor the density plots based on family and include the raw data to create sina plots\nTry to sort the violin plot in descending order, starting with the highest species richness\nMake it pretty! üòä\n\n\nfish.family.plot <- ggplot(fish.sprich.fam, aes(x = fct_reorder(family, -sprich, .fun = sum), \n                                                y = sprich, fill = family)) +\n  geom_violin(draw_quantiles = c(0.05, 0.5, 0.95), color = \"grey23\", alpha = 0.8, lwd = 0.5) +\n  geom_jitter(aes(shape = family), alpha = 0.5, color = \"black\", size = 3, width = 0.2) +\n  theme_bw() +\n  scale_fill_fish_d(option = \"Bodianus_rufus\", name = \"Fish family\") +\n  scale_shape_manual(values = c(21:24), name = \"Fish family\") +\n  ylab(\"Number of species per site\") +\n  xlab(\"Fish family\") \n  \nfish.family.plot\n\n\n\nClasswork solutions\nPart I\nCreate a dataset that summarizes species richness by surveyid and site.\nJoin this species richness data with the site exposure metadata.\n\n\nsite.info <- read.csv(file = \"data/site_info.csv\")\n\nfish.sprich.site <- fish.abundance %>%\n  select(surveyid, site, genspe) %>%\n  distinct() %>%\n  group_by(surveyid, site) %>%\n  summarize(sprich = n()) %>%\n  left_join(site.info, by = \"site\")\n\nhead(fish.sprich.site) \n\n# A tibble: 6 √ó 4\n# Groups:   surveyid [6]\n  surveyid site                sprich exposure\n     <int> <chr>                <int> <chr>   \n1  4000720 Watsons Bay north       87 lagoon  \n2  4000721 Watsons Bay north       84 lagoon  \n3  4000722 Watsons-Turtle Reef     71 lagoon  \n4  4000723 Watsons-Turtle Reef     82 lagoon  \n5  4000724 Horseshoe Reef          60 lagoon  \n6  4000725 Horseshoe Reef          68 lagoon  \n\nPart II\nUse a violin plot to visualize the species richness of exposed vs.¬†lagoon sites.\n\n\nfish.sprich.site.plot <- ggplot(fish.sprich.site, aes(x = exposure, y = sprich, fill = exposure)) +\n  geom_violin(draw_quantiles = c(0.025, 0.5, 0.975)) +\n  geom_jitter(width = 0.1) +\n    scale_fill_fish_d(option = \"Synchiropus_splendidus\") +\n  theme_bw()\nfish.sprich.site.plot\n\n\n\nPart III\nCalculate the average abundance of each family in a given survey.\nPlot the average abundance using density curves.\nBonus: transform the x-axis to make the plot more useful.\n\n\n# 1) Calculate the average abundance of each family in a given survey.\nfish.abun.survey <- fish.abundance %>%\n  group_by(surveyid, family) %>%\n  summarize(total.fish = sum(total))\nhead(fish.abun.survey)\n\n# A tibble: 6 √ó 3\n# Groups:   surveyid [1]\n  surveyid family         total.fish\n     <int> <chr>               <int>\n1  4000720 Acanthuridae           37\n2  4000720 Blenniidae              9\n3  4000720 Carangidae              2\n4  4000720 Chaetodontidae         33\n5  4000720 Gobiidae                5\n6  4000720 Haemulidae              3\n\n# 2) Plot the average abundance using density curves.\nfish.abun.plot <- ggplot(fish.abun.survey, \n                        aes(x = total.fish, y = family)) +\n                          geom_density_ridges(alpha = 0.5, fill = \"forestgreen\") +\n  theme_bw()\nfish.abun.plot\n\n\n# 3) Bonus: Transform the x-axis to make the plot more useful.\n# use rel_min_height() to cut the tails\nfish.abun.plot2 <- ggplot(fish.abun.survey, \n                        aes(x = log10(total.fish), #use log10 transformation\n                            y = fct_reorder(family, total.fish, .fun = sum))) + # use fct_reorder() to reorder the y-variable as descending based on the total sum of fish in each family\n                          geom_density_ridges(alpha = 0.5, rel_min_height = 0.005, fill = \"forestgreen\") +\n  xlab(\"Species richness (log)\") +\n  ylab(\"Fish family\") +\n  theme_bw()\nfish.abun.plot2\n\n\n\n\n\n\n",
      "last_modified": "2025-01-12T15:04:49-06:00"
    },
    {
      "path": "4-simulations.html",
      "title": "Session 4: Modeling ecological processes",
      "description": "This session introduces for loops as means to perform numerical simulations in R and allows you to play with models to simulate ecological processes. \n",
      "author": [
        {
          "name": "Simon J. Brandl, PhD",
          "url": "https://www.fishandfunctions.com/"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\na. 4: Demo\nb. 4: Slides\nc.¬†3: Exercises\nHomework\nPart I:\n\nClasswork\nPart I\nPart II\nPart III\n\n\nd.¬†4: Solutions\nHomework solutions\nPart I:\n\nClasswork solutions\nPart I\nPart II\nPart III\n\n\n\n\n\n\na. 4: Demo\n\n\n\n\n\n\n\n\nb. 4: Slides\nYou can access the full slideshow used in the 4-Simulations narration here.\n\nc.¬†3: Exercises\nHomework\nIf you want to, complete the following exercises at home after going through the demo above. We will go through the solutions to these exercises in class on Wednesday Feb 28th\nStart by loading the tidyverse package and copy-and-pasting the basic Moran Model into your R. The code for the model is below:\n\n\nlibrary(tidyverse)\n\nnum.sims <- 20 # specify the number of simulations \nnum.years <- 50 # specify the number of years\nfreq.1.mat <- matrix(ncol = num.sims, nrow = num.years) # create a matrix for output\n\n# FIRST LOOP FOR DIFFERENT SIMULATIONS\nfor (j in 1:num.sims) # use for-loop to run through the number of simulations\n  { \n  \n  J <- 100 # 100 individuals\n  t0.sp1 <- 0.5*J  # abundance of species 1 at time 0 \n  community <- vector(length = J) # set up community\n  community[1:t0.sp1] <- 1 # specify that half of the community is species 1\n  community[(t0.sp1+1):J] <- 2 # specify the other half is species 2\n  year <- 2 # set 'year' to 2 \n  freq.1.mat[1,j] <- sum(community==1)/J # fill community matrix\n  \n  # SECOND LOOP FOR INDIVIDUAL DEATH/BIRTH\n  for (i in 1:(J*(num.years-1))) # second for-loop to run multiple simulations\n    { \n    \n    freq.1 <- sum(community==1)/J # freq.1 represents the frequency of species 1\n    pr.1 <- freq.1 # pr.1 represents the frequency of reproduction\n    community[ceiling(J*runif(1))] <- sample(c(1,2), 1, prob=c(pr.1,1-pr.1))  # birth and death rates, based on probabilities\n    if (i %% J == 0)  # record data in the freq.1.mat matrix\n      { \n      \n      freq.1.mat[year, j] <- sum(community==1)/J\n      year <- year + 1\n      \n    }\n  }\n}\n\n\nAfter that, wrangle the data as done in the lecture and produce the beautiful graph below.\n\n\ncolnames(freq.1.mat) <- 1:num.sims # set column names in matrix\n\nfreq.sp1.df <- as.data.frame(freq.1.mat) %>% # convert freq.1.mat into data frame \n  add_column(year = 1:num.years) %>% # add a column called year\n  gather(1:20, key = iteration, value = frequency) # gather into long format\n\np1 <- ggplot(freq.sp1.df, \n             aes(x = year, \n                 y = frequency, \n                 group = iteration)) +\n  geom_line(aes(color = frequency), \n            alpha = 0.8) +\n  scale_color_gradient(low = \"darkorchid\",\n                       high = \"goldenrod\") +\n  theme_bw() +\n  theme(legend.position = \"none\") +\n  scale_y_continuous(limits = c(0,1)) +\n  xlab(\"Years\") +\n  ylab(\"Frequency of species 1\")\n\np1\n\n\n\nAccomplished? Well done. Here are your exercises:\nPart I:\nRun the same model but change the number of individuals to 500 and increase the number of years to 75\nRun the same model but decrease the number of individuals to 50, set the number of years back to 50, and increase the number of simulations to 50. Be careful with changing the number of simulations: you will have to adjust your downstream data wrangling code in the gather() function.\nChange the colors of your lines to be a beautiful green and blue instead and increase the opacity to 0.9.\nClasswork\nPart I\nIntroduce a selective advantage for Species 1 using a fitness ratio of 1.2. The fitness ratio affects the probability of reproduction in the following terms: fit.ratio * freq.1 / (fit.ratio * freq.1 + freq.2)\nRun a model with 300 individuals, 30 simulations, 50 years, and a fitness ratio of 1.2. Plot your outcomes (and make it pretty).\nRun the same model with 1000 individuals, 30 simulations, 50 years, and a fitness ratio of 1.2. Plot your outcomes next to your previous plot.\nPart II\nIntroduce negative frequency dependence into your model. To do so, you first need to define your average fitness ratio (fit.ratio.avg) based on the prevailing selective advantage. Frequency dependence then affects the fit.ratio in the following terms: exp(freq.dep * (freq.1 - 0.5) + log(fit.ratio.avg)).\nRun a model with 300 individuals, 30 simulations, 50 years, an average fitness ratio of 1.2, and a negative frequency dependence of -0.3. Plot your outcomes.\nRun a model with 1000 individuals, 30 simulations, 50 years, a fitness ratio of 1.5, and a negative frequency dependence of -0.5. Plot your outcomes.\nPart III\nIntroduce positive frequency dependence and change your starting densities. To do so, follow the same steps as above but also adjust your initial populations.\nRun a model with 1000 individuals, 30 simulations, 50 years, a fitness ratio of 1.1, and a positive frequency dependence of 0.1, with a starting frequency of Species 1 at 0.3.\nRun a model with 1000 individuals, 30 simulations, 50 years, a fitness ratio of 1.0, a positive frequency dependence of 0.3, and a starting frequency of Species 1 at 0.75.\nd.¬†4: Solutions\nHomework solutions\nPart I:\nRun the same model but change the number of individuals to 500 and increase the number of years to 75\n\n\nlibrary(tidyverse)\n\nnum.sims <- 30 # specify the number of simulations \nnum.years <- 75 # specify the number of years\nfreq.1.mat <- matrix(ncol = num.sims, nrow = num.years) # create a matrix for output\n\n# FIRST LOOP FOR DIFFERENT SIMULATIONS\nfor (j in 1:num.sims) # use for-loop to run through the number of simulations\n  { \n  \n  J <- 500 # 500 individuals\n  t0.sp1 <- 0.5*J  # abundance of species 1 at time 0 \n  community <- vector(length = J) # set up community\n  community[1:t0.sp1] <- 1 # specify that half of the community is species 1\n  community[(t0.sp1+1):J] <- 2 # specify the other half is species 2\n  year <- 2 # set 'year' to 2 \n  freq.1.mat[1,j] <- sum(community==1)/J # fill community matrix\n  \n  # SECOND LOOP FOR INDIVIDUAL DEATH/BIRTH\n  for (i in 1:(J*(num.years-1))) # second for-loop to run multiple simulations\n    { \n    \n    freq.1 <- sum(community==1)/J # freq.1 represents the frequency of species 1\n    pr.1 <- freq.1 # pr.1 represents the frequency of reproduction\n    community[ceiling(J*runif(1))] <- sample(c(1,2), 1, prob=c(pr.1,1-pr.1))  # birth and death rates, based on probabilities\n    if (i %% J == 0)  # record data in the freq.1.mat matrix\n      { \n      \n      freq.1.mat[year, j] <- sum(community==1)/J\n      year <- year + 1\n      \n    }\n  }\n}\n\ncolnames(freq.1.mat) <- 1:num.sims # set column names in matrix\n\nfreq.sp1.df <- as.data.frame(freq.1.mat) %>% # convert freq.1.mat into data frame \n  add_column(year = 1:num.years) %>% # add a column called year\n  gather(1:30, key = iteration, value = frequency) # gather into long format\n\np1 <- ggplot(freq.sp1.df, \n             aes(x = year, \n                 y = frequency, \n                 group = iteration)) +\n  geom_line(aes(color = frequency), \n            alpha = 0.8) +\n  scale_color_gradient(low = \"darkorchid\",\n                       high = \"goldenrod\") +\n  theme_bw() +\n  theme(legend.position = \"none\") +\n  scale_y_continuous(limits = c(0,1)) +\n  xlab(\"Years\") +\n  ylab(\"Frequency of species 1\")\np1\n\n\n\nRun the same model but decrease the number of individuals to 50, set the number of years back to 50, and increase the number of simulations to 50. Be careful with changing the number of simulations: you will have to adjust your downstream data wrangling code in the gather() function.\n\n\nlibrary(tidyverse)\n\nnum.sims <- 50 # specify the number of simulations \nnum.years <- 50 # specify the number of years\nfreq.1.mat <- matrix(ncol = num.sims, nrow = num.years) # create a matrix for output\n\n# FIRST LOOP FOR DIFFERENT SIMULATIONS\nfor (j in 1:num.sims) # use for-loop to run through the number of simulations\n  { \n  \n  J <- 50 # 500 individuals\n  t0.sp1 <- 0.5*J  # abundance of species 1 at time 0 \n  community <- vector(length = J) # set up community\n  community[1:t0.sp1] <- 1 # specify that half of the community is species 1\n  community[(t0.sp1+1):J] <- 2 # specify the other half is species 2\n  year <- 2 # set 'year' to 2 \n  freq.1.mat[1,j] <- sum(community==1)/J # fill community matrix\n  \n  # SECOND LOOP FOR INDIVIDUAL DEATH/BIRTH\n  for (i in 1:(J*(num.years-1))) # second for-loop to run multiple simulations\n    { \n    \n    freq.1 <- sum(community==1)/J # freq.1 represents the frequency of species 1\n    pr.1 <- freq.1 # pr.1 represents the frequency of reproduction\n    community[ceiling(J*runif(1))] <- sample(c(1,2), 1, prob=c(pr.1,1-pr.1))  # birth and death rates, based on probabilities\n    if (i %% J == 0)  # record data in the freq.1.mat matrix\n      { \n      \n      freq.1.mat[year, j] <- sum(community==1)/J\n      year <- year + 1\n      \n    }\n  }\n}\n\ncolnames(freq.1.mat) <- 1:num.sims # set column names in matrix\n\nfreq.sp1.df <- as.data.frame(freq.1.mat) %>% # convert freq.1.mat into data frame \n  add_column(year = 1:num.years) %>% # add a column called year\n  gather(1:30, key = iteration, value = frequency) # gather into long format\n\np1 <- ggplot(freq.sp1.df, \n             aes(x = year, \n                 y = frequency, \n                 group = iteration)) +\n  geom_line(aes(color = frequency), \n            alpha = 0.8) +\n  scale_color_gradient(low = \"darkorchid\",\n                       high = \"goldenrod\") +\n  theme_bw() +\n  theme(legend.position = \"none\") +\n  scale_y_continuous(limits = c(0,1)) +\n  xlab(\"Years\") +\n  ylab(\"Frequency of species 1\")\np1\n\n\n\nChange the colors of your lines to be a beautiful green and blue instead and increase the opacity to 0.9.\n\n\np1 <- ggplot(freq.sp1.df, \n             aes(x = year, \n                 y = frequency, \n                 group = iteration)) +\n  geom_line(aes(color = frequency), \n            alpha = 0.9) +\n  scale_color_gradient(low = \"forestgreen\",\n                       high = \"steelblue\") +\n  theme_bw() +\n  theme(legend.position = \"none\") +\n  scale_y_continuous(limits = c(0,1)) +\n  xlab(\"Years\") +\n  ylab(\"Frequency of species 1\")\np1\n\n\n\nClasswork solutions\nPart I\nIntroduce a selective advantage for Species 1 using a fitness ratio of 1.2. The fitness ratio affects the probability of reproduction in the following terms: fit.ratio * freq.1 / (fit.ratio * freq.1 + freq.2)\nRun a model with 300 individuals, 30 simulations, 50 years, and a fitness ratio of 1.2. Plot your outcomes (and make it pretty).\n\n\n# selection\nnum.sims <- 30 \nnum.years <- 50\nfreq.1.mat <- matrix(ncol = num.sims, nrow = num.years)\n\nfor (j in 1:num.sims) {\n  J <- 300\n  t0.sp1 <- 0.5*J  \n  community <- vector(length = J)\n  community[1:t0.sp1] <- 1\n  community[(t0.sp1+1):J] <- 2\n  year <- 2\n  freq.1.mat[1,j] <- sum(community==1)/J\n  \n  for (i in 1:(J*(num.years-1))) {\n    freq.1 <- sum(community==1)/J \n    freq.2 <- 1 - freq.1\n    fit.ratio <- 1.2 \n    pr.1 <- fit.ratio*freq.1/(fit.ratio*freq.1 + freq.2) \n    community[ceiling(J*runif(1))] <- sample(c(1,2), 1, prob=c(pr.1,1-pr.1)) \n    \n    # record data in the freq.1.mat matrix   \n    if (i %% J == 0) {\n      freq.1.mat[year, j] <- sum(community==1)/J\n      year <- year + 1\n    }\n  }\n}\n\ncolnames(freq.1.mat) <- 1:num.sims # set column names in matrix\n\nfreq.sp1.df <- as.data.frame(freq.1.mat) %>% # convert freq.1.mat into data frame \n  add_column(year = 1:num.years) %>% # add a column called year\n  gather(1:30, key = iteration, value = frequency) # gather into long format\n\np1 <- ggplot(freq.sp1.df, \n             aes(x = year, \n                 y = frequency, \n                 group = iteration)) +\n  geom_line(aes(color = frequency), \n            alpha = 0.8) +\n  scale_color_gradient(low = \"firebrick\",\n                       high = \"turquoise\") +\n  theme_bw() +\n  theme(legend.position = \"none\") +\n  scale_y_continuous(limits = c(0,1)) +\n  xlab(\"Years\") +\n  ylab(\"Frequency of species 1\")\np1\n\n\n\nRun the same model with 1000 individuals, 30 simulations, 50 years, and a fitness ratio of 1.2. Plot your outcomes next to your previous plot.\n\n\n# selection\nnum.sims <- 30 \nnum.years <- 50\nfreq.1.mat <- matrix(ncol = num.sims, nrow = num.years)\n\nfor (j in 1:num.sims) {\n  J <- 1000\n  t0.sp1 <- 0.5*J  \n  community <- vector(length = J)\n  community[1:t0.sp1] <- 1\n  community[(t0.sp1+1):J] <- 2\n  year <- 2\n  freq.1.mat[1,j] <- sum(community==1)/J\n  \n  for (i in 1:(J*(num.years-1))) {\n    freq.1 <- sum(community==1)/J \n    freq.2 <- 1 - freq.1\n    fit.ratio <- 1.2 \n    pr.1 <- fit.ratio*freq.1/(fit.ratio*freq.1 + freq.2) \n    community[ceiling(J*runif(1))] <- sample(c(1,2), 1, prob=c(pr.1,1-pr.1)) \n    \n    # record data in the freq.1.mat matrix   \n    if (i %% J == 0) {\n      freq.1.mat[year, j] <- sum(community==1)/J\n      year <- year + 1\n    }\n  }\n}\n\ncolnames(freq.1.mat) <- 1:num.sims # set column names in matrix\n\nfreq.sp1.df <- as.data.frame(freq.1.mat) %>% # convert freq.1.mat into data frame \n  add_column(year = 1:num.years) %>% # add a column called year\n  gather(1:30, key = iteration, value = frequency) # gather into long format\n\np1 <- ggplot(freq.sp1.df, \n             aes(x = year, \n                 y = frequency, \n                 group = iteration)) +\n  geom_line(aes(color = frequency), \n            alpha = 0.8) +\n  scale_color_gradient(low = \"firebrick\",\n                       high = \"turquoise\") +\n  theme_bw() +\n  theme(legend.position = \"none\") +\n  scale_y_continuous(limits = c(0,1)) +\n  xlab(\"Years\") +\n  ylab(\"Frequency of species 1\")\np1\n\n\n\nPart II\nIntroduce negative frequency dependence into your model. To do so, you first need to define your average fitness ratio (fit.ratio.avg) based on the prevailing selective advantage. Frequency dependence then affects the fit.ratio in the following terms: exp(freq.dep * (freq.1 - 0.5) + log(fit.ratio.avg)).\nRun a model with 300 individuals, 30 simulations, 50 years, an average fitness ratio of 1.2, and a negative frequency dependence of -0.3. Plot your outcomes.\n\n\n\nRun a model with 1000 individuals, 30 simulations, 50 years, a fitness ratio of 1.5, and a negative frequency dependence of -0.5. Plot your outcomes.\n\n\n\nPart III\nIntroduce positive frequency dependence and change your starting densities. To do so, follow the same steps as above but also adjust your initial populations.\nRun a model with 1000 individuals, 30 simulations, 50 years, a fitness ratio of 1.1, and a positive frequency dependence of 0.1, with a starting frequency of Species 1 at 0.3.\n\n\n# positive frequency dependence\nnum.sims <- 30 \nnum.years <- 50\nfreq.1.mat <- matrix(ncol = num.sims, nrow = num.years)\n\nfreq.dep = 0.1\nfit.ratio.avg <- 1.1\n\nfor (j in 1:num.sims) {\n  J <- 1000\n  t0.sp1 <- 0.3*J  \n  community <- vector(length = J)\n  community[1:t0.sp1] <- 1\n  community[(t0.sp1+1):J] <- 2\n  year <- 2\n  freq.1.mat[1,j] <- sum(community==1)/J\n  \n  for (i in 1:(J*(num.years-1))) {\n    freq.1 <- sum(community==1)/J \n    freq.2 <- 1 - freq.1\n    fit.ratio <- exp(freq.dep*(freq.1-0.5) + log(fit.ratio.avg))\n    pr.1 <- fit.ratio*freq.1/(fit.ratio*freq.1 + freq.2)\n    community[ceiling(J*runif(1))] <- sample(c(1,2), 1, prob=c(pr.1,1-pr.1)) \n    \n    # record data in the freq.1.mat matrix   \n    if (i %% J == 0) {\n      freq.1.mat[year, j] <- sum(community==1)/J\n      year <- year + 1\n    }\n  }\n}\n\ncolnames(freq.1.mat) <- 1:num.sims # set column names in matrix\n\nfreq.sp1.df <- as.data.frame(freq.1.mat) %>% # convert freq.1.mat into data frame \n  add_column(year = 1:num.years) %>% # add a column called year\n  gather(1:30, key = iteration, value = frequency) # gather into long format\n\np1 <- ggplot(freq.sp1.df, \n             aes(x = year, \n                 y = frequency, \n                 group = iteration)) +\n  geom_line(aes(color = frequency), \n            alpha = 0.8) +\n  scale_color_gradient(low = \"darkviolet\",\n                       high = \"darkseagreen1\") +\n  theme_bw() +\n  theme(legend.position = \"none\") +\n  scale_y_continuous(limits = c(0,1)) +\n  xlab(\"Years\") +\n  ylab(\"Frequency of species 1\")\np1\n\n\n\nRun a model with 1000 individuals, 30 simulations, 50 years, a fitness ratio of 1.0, a positive frequency dependence of 0.3, and a starting frequency of Species 1 at 0.75.\n\n\n# positive frequency dependence\nnum.sims <- 30 \nnum.years <- 50\nfreq.1.mat <- matrix(ncol = num.sims, nrow = num.years)\n\nfreq.dep = 0.3\nfit.ratio.avg <- 1.0\n\nfor (j in 1:num.sims) {\n  J <- 1000\n  t0.sp1 <- 0.75*J  \n  community <- vector(length = J)\n  community[1:t0.sp1] <- 1\n  community[(t0.sp1+1):J] <- 2\n  year <- 2\n  freq.1.mat[1,j] <- sum(community==1)/J\n  \n  for (i in 1:(J*(num.years-1))) {\n    freq.1 <- sum(community==1)/J \n    freq.2 <- 1 - freq.1\n    fit.ratio <- exp(freq.dep*(freq.1-0.5) + log(fit.ratio.avg))\n    pr.1 <- fit.ratio*freq.1/(fit.ratio*freq.1 + freq.2)\n    community[ceiling(J*runif(1))] <- sample(c(1,2), 1, prob=c(pr.1,1-pr.1)) \n    \n    # record data in the freq.1.mat matrix   \n    if (i %% J == 0) {\n      freq.1.mat[year, j] <- sum(community==1)/J\n      year <- year + 1\n    }\n  }\n}\n\ncolnames(freq.1.mat) <- 1:num.sims # set column names in matrix\n\nfreq.sp1.df <- as.data.frame(freq.1.mat) %>% # convert freq.1.mat into data frame \n  add_column(year = 1:num.years) %>% # add a column called year\n  gather(1:30, key = iteration, value = frequency) # gather into long format\n\np1 <- ggplot(freq.sp1.df, \n             aes(x = year, \n                 y = frequency, \n                 group = iteration)) +\n  geom_line(aes(color = frequency), \n            alpha = 0.8) +\n  scale_color_gradient(low = \"darkviolet\",\n                       high = \"darkseagreen1\") +\n  theme_bw() +\n  theme(legend.position = \"none\") +\n  scale_y_continuous(limits = c(0,1)) +\n  xlab(\"Years\") +\n  ylab(\"Frequency of species 1\")\np1\n\n\n\n\n\n\n",
      "last_modified": "2025-01-12T15:05:39-06:00"
    },
    {
      "path": "5-pca.html",
      "title": "Session 5: Principal Component Analysis",
      "description": "This session introduces Principal Component Analyses, their interpretation, visualization, and other ordination types.  \n",
      "author": [
        {
          "name": "Simon J. Brandl, PhD",
          "url": "https://www.fishandfunctions.com/"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\na. 5: Demo\nb. 5: Slides\n\n\n\n\na. 5: Demo\n\n\n\n\n\n\n\n\nb. 5: Slides\nYou can access the full slideshow used in the 5-PCA narration here.\nThe dataset called ‚Äòcoralreefherbivores.csv‚Äô can be downloaded here.\nThe dataset called ‚Äòfishcoms_lizardisland.csv‚Äô can be downloaded here.\n\n\n\n\n",
      "last_modified": "2025-01-12T15:05:40-06:00"
    },
    {
      "path": "about.html",
      "title": "About",
      "description": "This page offers a brief summary of the course, including the main structural elements, learning objectives, and assignments.\n",
      "author": [],
      "date": "`r Sys.Date()`",
      "contents": "\nCourse synopsis\n\nGoal: This course aims to provide students with a holistic understanding of the assembly and functioning of marine communities. Students will learn about existing and emerging theories and concepts in community ecology and gain insight into traditional and modern techniques to study marine communities, from visual censuses to molecular approaches.\n\nCoding in R: The course includes quantitative training and practical components using the software R, designed to foster an understanding of basic statistical concepts in community ecology and their thoughtful implementation. No existing experience in R is required but familiarizing yourself with the software early on may be helpful (see resources below).\n\nFieldwork: The course also includes hands-on field surveys and collections, performed in coastal environments in South Texas. Some of them (bird surveys) can be replicated in almost any type of environment to obtain similar data.\nLearning objectives\nAll students:\nGain a thorough understanding of ecological theory\nAcquire/improve computational skills to explore, analyze, and visualize data in R\nExpress scientific knowledge in writing via research papers, syntheses, and short essays\nPresent your work and follow/contribute to discussions on marine community ecology\nSurvey, sample, process, and analyze marine and estuarine communities in the field\nLearn how to assess your own progress and growth in a non-traditional grading format\nGraduate students:\nGain advanced skills in R that allow you to troubleshoot coding issues and help your peers navigate the pitfalls of data wrangling, analyses, and visualization in R\nDevelop leadership skills in research, including the capacity to steer discussions, tackle problems, find solutions, and delegate tasks\nSynthesize research outcomes into a brief, compelling narrative, pitched to a journal using a cover letter, abstract, and figures\nAssignments\nAssignments differ depending on your enrollment (undergraduate vs.¬†graduate), as indicated below. For undergraduate students, assignments will include homework, self-evaluations, and three main projects, two of them written and one as a group presentation. For graduate students, there will be one additional presentation and a skeleton paper for journal ‚Äòsubmission‚Äô.\nProject 1: Paper critique\nFor the first project, you will compose a 3-page double-spaced critique of a prominent theory in community ecology. At least 10 relevant references should be included on a separate page. You will work in small groups to assemble and review literature on the theory, but each individual will compose their own essay. Theories and groups will be assigned during the second week of class. If you need more space, you are welcome to write up to (but no more) than 5 pages of double-spaced text. This is an individual paper, but you can work in groups to assemble, read, and classify literature.\nProject 2: Research paper\nFor the second project, you will compose a 5-page double-spaced research paper on the data collected during the first set of field surveys alongside some historical data. At least 15 relevant references should be included on a separate page. You will work together as a class to collect data, then each student will analyze, visualize, and interpret the data in a short research paper. Class time will be given for data analysis and visualization. Further project details will be presented in class.\nProject 3: Research presentation\nFor the third project, you will combine data collected during the second set of field surveys with some laboratory techniques. You will work as a group, crafting a short presentation (15 mins) that contain your main results and interpretations. Further project details will be presented in class.\n\n\n\n\n",
      "last_modified": "2025-01-12T15:05:40-06:00"
    },
    {
      "path": "index.html",
      "title": "Marine Community Ecology",
      "author": [],
      "contents": "\n\n          \n          \n          Marine Community Ecology - UT Austin Marine Science Institute\n          \n          \n          Home\n          About\n          \n          \n          Lectures\n           \n          ‚ñæ\n          \n          \n          1-Primer to Community Ecology\n          \n          \n          \n          \n          Coding in R\n           \n          ‚ñæ\n          \n          \n          0-Overview\n          1-Introduction\n          2-Tidyverse\n          3-ggplot\n          4-Simulations\n          5-PCA\n          \n          \n          Instructors\n          ‚ò∞\n          \n          \n      \n        \n          \n            \n              \n            \n              Marine Community Ecology\n            \n            \n              \n                \n                    \n                      \n                         GitHub\n                      \n                    \n                  \n                                    \n                    \n                      \n                         Email\n                      \n                    \n                  \n                                  \n            \n          \n        \n        \n        \n          \n            \n            ü¶ë üê† üêö ü¶Ä üê≥ üê° üêô ü¶à ü¶ê\n             This is the companion page for\n            MNS352/MNS382: Marine Community Ecology,\n            taught at the University of Texas at Austin Marine Science\n            Institute. The aim of this course is to provide students\n            with a holistic understanding of the assembly and\n            functioning of ecological communities in the marine\n            environment. The course provides an introduction to using R\n            for the analyses of ecological communities. All materials\n            needed to follow and complete the coding lessons and\n            exercises are provided on this page.  üî®This\n            website was built in R using the\n            distill package. All slideshows were created in\n            R using the xaringan package.\n            üî® \n            License and Citation: This is an\n            Open Educational Resource (OER) licensed under CC-BY-NC. You\n            may use or amend the content for you own non-commercial\n            purposes but please reference it appropriately.\n            \n            \n          \n        \n      \n    \n\n    \n      \n        \n          \n            \n              \n            \n              Marine Community Ecology\n            \n            \n              \n                \n                                    \n                    \n                       GitHub\n                    \n                  \n                                    \n                    \n                       Email\n                    \n                  \n                                  \n              \n            \n            \n              \n              ü¶ë üê† üêö ü¶Ä üê≥ üê° üêô ü¶à ü¶ê\n               This is the companion page for\n              MNS352/MNS382: Marine Community Ecology,\n              taught at the University of Texas at Austin Marine Science\n              Institute. The aim of this course is to provide students\n              with a holistic understanding of the assembly and\n              functioning of ecological communities in the marine\n              environment. The course provides an introduction to using\n              R for the analyses of ecological communities. All\n              materials needed to follow and complete the coding lessons\n              and exercises are provided on this page.  üî®This\n              website was built in R using the\n              distill package. All slideshows were created\n              in R using the xaringan\n              package. üî® \n              License and Citation: This is an\n              Open Educational Resource (OER) licensed under CC-BY-NC.\n              You may use or amend the content for you own\n              non-commercial purposes but please reference it\n              appropriately.\n              \n              \n            \n        \n      \n    \n\n    \n    \n    ",
      "last_modified": "2025-01-12T15:05:51-06:00"
    },
    {
      "path": "instructors.html",
      "title": "Course instructors",
      "description": "A brief introduction to your course instructors \n",
      "author": [],
      "date": "`r Sys.Date()`",
      "contents": "\n\nSimon J. Brandl, PhD\nDr.¬†Brandl is an Assistant Professor in Marine Science at the University of Texas at Austin Marine Science Institute. He maintains a research program that revolves around the causes and consequences of marine community assembly. Dr.¬†Brandl originally developed this course in 2022.\n\nJordan M. Casey, PhD\nDr.¬†Casey is also an Assistant Professor in Marine Science at the University of Texas at Austin Marine Science Institute. She examines ecological communities and trophic interactions among species using molecular techniques. Dr.¬†Casey refined the course materials in 2023.\n\n\n\n",
      "last_modified": "2025-01-12T15:05:51-06:00"
    }
  ],
  "collections": []
}
